{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2010-01-07-wpf-routed-events/","result":{"data":{"markdownRemark":{"html":"<p>Ever have a control on a window and want to be able to receive button clicks from this child control?<br>\nMore than one I've done this the hard way, but now.....</p>\n<p>[code:c#]</p>\n<p>public VariablesWindow()<br>\n{<br>\nthis.InitializeComponent();<br>\nvariables.AddHandler(Button.ClickEvent, new RoutedEventHandler(HandleChildClick));<br>\n}</p>\n<p>private void HandleChildClick(object sender, RoutedEventArgs args)<br>\n{<br>\nButton senderButton = args.OriginalSource as Button;<br>\nif (senderButton != null &#x26;&#x26; senderButton.Content != null)<br>\n{<br>\nstring buttonText = senderButton.Content as string;<br>\nif (buttonText == \"_Cancel\")<br>\n{<br>\nthis.DialogResult = false;<br>\nClose();<br>\n}<br>\nelse if (buttonText == \"_OK\")<br>\n{<br>\nthis.DialogResult = true;<br>\nClose();<br>\n}<br>\n}<br>\n}</p>\n<p>[/code]</p>","frontmatter":{"title":"WPF Routed events","date":"January 07, 2010"}}},"pageContext":{"slug":"/blog/2010-01-07-wpf-routed-events/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}