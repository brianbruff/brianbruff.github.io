{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2011-04-19-restful-wcf-services/","result":{"data":{"markdownRemark":{"html":"<p>WCF not only provides SOAP, it’s also capable of providing RESTful services through use of the WebGet and WebInvoke attributes in the System.ServiceModel.Web assembly in conjunction with the webHttpBinding and webHttp behaviour. In fact, WebGet/WebInvoke are not really required required (however PUT is the default Http Verb and you won’t be able to specify what methods correspond to urls.</p>\n<p>Here’s a sample;</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">[ServiceContract]\n\n    public interface IPersonInfo\n\n    {\n\n        [OperationContract]\n\n        [WebGet(UriTemplate = \"/Details\")]\n\n        string Details();\n\n        [OperationContract]\n\n        [WebGet(UriTemplate = \"/Person\")]\n\n        Person GetRandomPerson();\n\n        [OperationContract]\n\n        [WebGet(UriTemplate = \"/Person?format=xml\", ResponseFormat = WebMessageFormat.Xml)]\n\n        Person GetRandomPersonXml();\n\n        [OperationContract]\n\n        [WebGet(UriTemplate = \"/Person?format=json\", ResponseFormat = WebMessageFormat.Json)]\n\n        Person GetRandomPersonJson();\n\n    }\n\n[ServiceBehavior(InstanceContextMode = InstanceContextMode.Single)]\n\n    public class PersonService : IPersonInfo\n\n    {\n\n        public string Details()\n\n        {\n\n            WebOperationContext.Current.OutgoingResponse.StatusCode = System.Net.HttpStatusCode.OK;\n\n            return \"Mon-Fri 9am to 5pm\";\n\n        }\n\n        public Person GetRandomPerson()\n\n        {\n\n            return new Person { Address = \"Limerick\", Name = \"Brian\", Country = \"Ireland\" }; // not so random..\n\n        }\n\n        public Person GetRandomPersonXml()\n\n        {\n\n            return new Person { Address = \"Limerick\", Name = \"Brian\", Country = \"Ireland\" }; // not so random..\n\n        }\n\n        public Person GetRandomPersonJson()\n\n        {\n\n            return new Person { Address = \"Limerick\", Name = \"Brian\", Country = \"Ireland\" }; // not so random..\n\n        }\n\n    }</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Host this service in IIS for example and you’ll be able to get the following results</p>\n<p><img src=\"/images//blog/image.axd?picture=image_thumb_38.png\" alt=\"\"></p>\n<p>As REST support only arrived in WCF 3.5 there is still a lack of support in certain areas, e.g. error handling, caching etc; what I’ve seen done in practise is people continue to use the REST Starter kit from codeplex.</p>","frontmatter":{"title":"RESTful WCF Services","date":"April 19, 2011"}}},"pageContext":{"slug":"/blog/2011-04-19-restful-wcf-services/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}