{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2011-11-16-supporting-wse-plain-text-password-with-wcf-basichttpbinding/","result":{"data":{"markdownRemark":{"html":"<p>Hi all,</p>\n<p>Ok, so I did a bit of googling to see if this had been done by someone else, turns out I failed to find a suitable solution, just many frustrated people.</p>\n<p>So this post is an attempt to make those people a little happier.</p>\n<p>The solutions is as follows(, It’s a bit rough around the edges at the moment as I have just got it working and have not yet cleaned up the code).</p>\n<ul>\n<li>\n<p>Firstly, I created a binding to manage the header</p>\n<p>public class MyBehavior : BehaviorExtensionElement, IEndpointBehavior</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{      \n\n    public MyBehavior(string userName, string password)\n\n    {\n\n        this.UserName = userName;\n\n        this.Password = password;\n\n    }\n\n    #region IEndpointBehavior Members\n\n    public void AddBindingParameters(ServiceEndpoint endpoint, BindingParameterCollection bindingParameters)\n\n    {\n\n    }\n\n    public void ApplyClientBehavior(ServiceEndpoint endpoint, ClientRuntime clientRuntime)\n\n    {\n\n        clientRuntime.MessageInspectors.Add(new MyMessageInspector(this.UserName, this.Password));\n\n    }\n\n    public void ApplyDispatchBehavior(ServiceEndpoint endpoint, EndpointDispatcher endpointDispatcher) \n\n    {\n\n    }\n\n    public void Validate(ServiceEndpoint endpoint) \n\n    { \n\n    }\n\n    #endregion\n\n    public override Type BehaviorType\n\n    {\n\n        get \n\n        { \n\n            return typeof(MyBehavior); \n\n        } \n\n    }\n\n    protected override object CreateBehavior() \n\n    { \n\n        return new MyBehavior(this.UserName, this.Password); \n\n    }\n\n    public string UserName { get; set; }\n\n    public string Password { get; set; }\n\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<p>Ok so now we can see this behavior adds a MessageInspector to every message. lets take a look at what the message inspector does.</p>\n<ul>\n<li>\n<p>MessageInspector</p>\n<p>class MyMessageInspector : IClientMessageInspector\n{\npublic MyMessageInspector(string username, string password)\n{\n_username = username;\n_password = password;\n}</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">public void AfterReceiveReply(ref System.ServiceModel.Channels.Message reply, object correlationState)\n{\n        \n}\n\npublic object BeforeSendRequest(ref System.ServiceModel.Channels.Message request, System.ServiceModel.IClientChannel channel)\n{\n    var header = new WseHeader(_username, _password);            \n            \n    request.Headers.Add(header); \n        \n    return null;\n}\n\nprivate string _username;\nprivate string _password;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>}</p>\n</li>\n</ul>\n<p>So here in my message inspector I add a new header.</p>\n<p>In fact it’s this header that was making life hard for most people.</p>\n<ul>\n<li>\n<p>WseHeader</p>\n<p>class WseHeader : MessageHeader</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{        \n\n    public WseHeader(string userName, string password)\n\n    {\n\n        this.UserName = userName;\n\n        this.Password = password;\n\n    }\n\n    public string UserName\n\n    {\n\n        get;\n\n        private set;\n\n    }\n\n    private string Password\n\n    {\n\n        get;\n\n        set;\n\n    }\n\n    protected override void OnWriteStartHeader(System.Xml.XmlDictionaryWriter writer, MessageVersion messageVersion)\n\n    {\n\n        base.OnWriteStartHeader(writer, messageVersion);\n\n        writer.WriteAttributeString(\"s:mustUnderstand\", \"0\");\n\n        writer.WriteAttributeString(\"xmlns:wsse\", WsseNamespaceToken);\n\n        writer.WriteAttributeString(\"xmlns:s\", \"http://schemas.xmlsoap.org/soap/envelope/\");\n\n    }\n\n    protected override void OnWriteHeaderContents(System.Xml.XmlDictionaryWriter writer, MessageVersion messageVersion)\n\n    {\n\n        writer.WriteRaw(Properties.Resources.WseHeaderText.Replace(\"{USERNAME}\", \n\n            this.UserName).Replace(\"{PASSWORD}\", this.Password));\n\n    }\n\n    public override string Name\n\n    {\n\n        get { return \"wsse:Security\"; }\n\n    }\n\n    public override string Namespace\n\n    {\n\n        get { return \"\"; }\n\n    }\n\n    public override bool MustUnderstand\n\n    {\n\n        get\n\n        {\n\n            return false;\n\n        }\n\n    }\n\n    private const string WsseNamespaceToken = \"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\";\n\n}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<p>This class will create a header like this</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&lt;wsse:Security s:mustUnderstand=\"0\" xmlns:wsse=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-secext-1.0.xsd\" xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">\n\n    &lt;wsse:UsernameToken wsu:Id=\"SecurityToken-3f7f983f-66ce-480d-bce6-170632d33f92\" xmlns:wsu=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\">\n\n        &lt;wsse:Username>bek@anchorwsse:Username>\n\n        &lt;wsse:Password Type=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\">dotnetrockswsse:Password>\n\n    wsse:UsernameToken>\n\n    wsse:Security></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p>Please note I’m getting the body of the header from a project resource, here it is WseHeaderText</p>\n<p>\"SecurityToken-3f7f983f-66ce-480d-bce6-170632d33f92\" xmlns:wsu=\"<a href=\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd%22%3E\">http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd\"></a></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">{USERNAME}\n\n\"http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-username-token-profile-1.0#PasswordText\">{PASSWORD}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n</li>\n</ul>\n<p>I just replace the username and password in code in the MessageHeader. I could probably do all this neater with the API but it’s good enough for my investigation tonight, I usually just add the WSE header directly into my configuration file and not bother with the behavior.</p>\n<p>e.g.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">&lt;client>\n\n          &lt;endpoint address=\"http://anchor:8083/gdm/TemplateActionsService/TemplateActionsService\" binding=\"basicHttpBinding\" bindingConfiguration=\"TemplateActionsServiceSoapBinding\" contract=\"TemplateActionsProxy.TemplateActionsServiceType\" name=\"TemplateActionsServicePort\">\n\n          endpoint>\n\n        client></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>So I hope this helps somebody else. <img src=\"./image.axd?picture=wlEmoticon-ninja_1.png\" alt=\"Ninja\"></p>","frontmatter":{"title":"Supporting WSE plain text password with WCF BasicHttpBinding","date":"November 16, 2011"}}},"pageContext":{"slug":"/blog/2011-11-16-supporting-wse-plain-text-password-with-wcf-basichttpbinding/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}