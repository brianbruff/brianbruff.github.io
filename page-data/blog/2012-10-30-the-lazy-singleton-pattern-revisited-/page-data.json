{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2012-10-30-the-lazy-singleton-pattern-revisited-/","result":{"data":{"markdownRemark":{"html":"<p>If you want to get a feel for the singleton pattern in C# one of the best resources I always revisit is on John Skeet’s (@jonskeet) website <a href=\"http://www.yoda.arachsys.com/csharp/singleton.html\">http://www.yoda.arachsys.com/csharp/singleton.html</a></p>\n<p>I encourage you to read the above article to appreciate the little intricacies or requiring static constructor, BeforeFieldInit, volatile etc.</p>\n<p>However: If you just want the easiest lazy evaluation solution in .net4+, then you’ve come to the right place.</p>\n<p><img src=\"/images/./image.axd?picture=image_thumb_230.png\" alt=\"\"></p>\n<p>Lazy guarantees thread-safe lazy construction.</p>\n<h1>UPDATE:</h1>\n<p>If I’d followed Jon’s notice, at the top of the page I linked to, I would have seen the post is now located <a href=\"http://csharpindepth.com/Articles/General/Singleton.aspx\">here</a> and moreover, he covers the Lazy approach there.</p>\n<h2></h2>","frontmatter":{"title":"The lazy singleton pattern revisited.","date":"October 30, 2012"}}},"pageContext":{"slug":"/blog/2012-10-30-the-lazy-singleton-pattern-revisited-/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}