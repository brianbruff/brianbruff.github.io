{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2013-02-16-jax-ws-eclipse-jboss/","result":{"data":{"markdownRemark":{"html":"<p>Ok another Java post, they are few and far between, but I’ve already polluted this blog with objective-c, javascript and other non .net languages so why not.</p>\n<p>So I was lying in bed last night my wife was hogging the windows machine watching some film or other, so I’d a choice between reading 50 shades of grey or firing up my mac book air, no contest there…</p>\n<p>I recently interviewed a guy that had moved from Apache Axis to JAX-WS, the way he described it sounded a lot like WCF (windows communication foundation) so I wanted to see for myself.</p>\n<ul>\n<li>Install Jboss 7.1.1 for an application server</li>\n<li>Install Eclipse juno IDE for Java</li>\n<li>Install Mono Develop (not necessary but i had this already for iPhone dev so thought what the heck I’ll use it for the client)</li>\n</ul>\n<p>So what is JAX-WS? The Java API for XML Web Services (JAX-WS) is a Java programming language API for creating web services. It is part of the Java EE platform from Sun Microsystems. Like the other Java EE APIs, JAX-WS uses annotations. Here’s how I created a sample one.</p>\n<p><strong>Ensure JBoss can run</strong></p>\n<p>Start the standalone shell script and check you can see <a href=\"http://localhost:8080\">http://localhost:8080</a> page below in your browser</p>\n<p><img src=\"/images/./image.axd?picture=clip_image001_1.png\" alt=\"\"></p>\n<p><strong>Choose JavaEE perspective in Eclipse</strong></p>\n<p><img src=\"/images/./image.axd?picture=clip_image002.png\" alt=\"\"></p>\n<p><strong>Create a new project in Eclipse</strong>**(dynamic web)**</p>\n<p><img src=\"/images/./image.axd?picture=clip_image003.png\" alt=\"\"></p>\n<p><strong>Add the following webservice class</strong></p>\n<p>Complete with annotations</p>\n<p><img src=\"/images/./image.axd?picture=clip_image004.png\" alt=\"\"></p>\n<p><strong>Modify web.xml</strong></p>\n<p>Add the highlighted section</p>\n<p><img src=\"/images/./image.axd?picture=clip_image005.png\" alt=\"\"></p>\n<p><strong>Configure the Local JBoss server in eclipse</strong></p>\n<p>Right click on the server you added and choose Add/Remove</p>\n<p><img src=\"/images/./image.axd?picture=clip_image006.png\" alt=\"\"></p>\n<p><strong>Add your deployment</strong></p>\n<p><img src=\"/images/./image.axd?picture=clip_image007.png\" alt=\"\"></p>\n<p>Add your current deployment<br>\n<img src=\"/images/./image.axd?picture=clip_image008.png\" alt=\"\"></p>\n<p><strong>Start Application Server</strong></p>\n<p>Click on the Play button in the server tab toolbar, you should be automatically switched to the Console pane in Eclipse. Take note that your DynamicTest war file is deployed.</p>\n<p><img src=\"/images/./image.axd?picture=clip_image009.png\" alt=\"\"></p>\n<p><strong>Review the JBoss Admin Console</strong></p>\n<p>Specifically the Webservice Endpoints, You should see your webservice deployed here.</p>\n<p><img src=\"/images/./image.axd?picture=clip_image010.png\" alt=\"\"></p>\n<p>You can also browse to the wsdl</p>\n<p><img src=\"/images/./image.axd?picture=clip_image011.png\" alt=\"\"></p>\n<p><strong>Create your client</strong></p>\n<p>I used C# with the Mono Develop IDE to create a simple Console Application</p>\n<p><img src=\"/images/./image.axd?picture=clip_image012.png\" alt=\"\"></p>\n<p>Just add a Webservice the way you would in Visual Studio (I went for .net 2.0 WS because the WCF version didn’t create an app.config for me (visual studio you spoil me)).</p>\n<p><strong>Run</strong></p>\n<p><img src=\"/images/./image.axd?picture=clip_image013.png\" alt=\"\"></p>\n<p>And that’s it your first JAX-WS! (and not a windows machine in sight.. I feel dirty but I like it :-) )</p>\n<p>=== UPDATE ===</p>\n<p>Ok after reading a lot of blogs and a few weeks later i've found a nicer way of doing it.</p>\n<p>Instead of editing the xml you can choose to add a new webservice and select your webservice class (note screens below are not for the same project but are functionaly the same</p>\n<p><img src=\"/image.axd?picture=2013%2f3%2fScreen+Shot+2013-03-22+at+22.08.37.png\" alt=\"\"></p>\n<p><img src=\"/image.axd?picture=2013%2f3%2fScreen+Shot+2013-03-22+at+22.09.12.png\" alt=\"\"></p>\n<p><img src=\"/image.axd?picture=2013%2f3%2fScreen+Shot+2013-03-22+at+22.15.45.png\" alt=\"\"></p>","frontmatter":{"title":"JAX-WS, Eclipse, JBoss","date":"February 16, 2013"}}},"pageContext":{"slug":"/blog/2013-02-16-jax-ws-eclipse-jboss/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}