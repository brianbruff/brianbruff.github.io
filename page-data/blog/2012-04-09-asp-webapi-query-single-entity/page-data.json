{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2012-04-09-asp-webapi-query-single-entity/","result":{"data":{"markdownRemark":{"html":"<p>What’s wrong with this?</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">   1:  public class UsersController : RavenController\n\n   2:  {  \n\n   3:      public User Get(int userId)\n\n   4:      {\n\n   5:          this.AutoSave = false;\n\n   6:          var user = RavenSession.Load(userId);\n\n   7:          if (user == null)\n\n   8:             throw new HttpResponseException(\"Unable to find user for it \" + userId);\n\n   9:          return user;\n\n  10:      }\n\n  11:   \n\n  12:      // GET /api/values\n\n  13:      public IQueryable GetAll()\n\n  14:      {\n\n  15:          this.AutoSave = false;\n\n  16:          return RavenSession.Query();            \n\n  17:      }        \n\n  18:  }</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>The problem is the variable name used for getting a single user the function would never be called.</p>\n<p>E.g. if we put <a href=\"http://localhost:65487/api/users/1\">http://localhost:65487/api/users/1</a> into our browser what will happen is the GetAll gets called!</p>\n<p>What we need to call is</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">   1:  public class UsersController : RavenController\n\n   2:  {  \n\n   3:      public User Get(int id)\n\n   4:      {\n\n   5:          this.AutoSave = false;\n\n   6:          var user = RavenSession.Load(id);\n\n   7:          if (user == null)\n\n   8:              throw new HttpResponseException(\"Unable to find user for it \" + id);\n\n   9:          return user;\n\n  10:      }\n\n  11:   \n\n  12:      // GET /api/values\n\n  13:      public IQueryable GetAll()\n\n  14:      {\n\n  15:          this.AutoSave = false;\n\n  16:          return RavenSession.Query();            \n\n  17:      }        \n\n  18:  }</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Now you see that the Get takes** <em>a variable name of “id” this is key to getting this work</em>**.</p>\n<p>Note: I’m using IQuerable as this allows me to add some query parameters to my request, e.g.</p>\n<p><strong>$filter</strong><br>\nA Boolean expression for whether a particular entry should be included in the feed, e.g. Categories?$filter=CategoryName eq 'Produce'. The Query Expression section describes OData expressions.</p>\n<p><strong>$orderby</strong><br>\nOne or more comma-separated expressions with an optional “asc” (the default) or “desc” depending on the order you’d like the values sorted, e.g. Categories?$orderby=CategoryName desc.</p>\n<p><strong>$select</strong><br>\nLimit the properties on each entry to just those requested, e.g. Categories?$select=CategoryName,Description.</p>\n<p><strong>$skip</strong><br>\nHow many entries you’d like to skip, e.g. Categories?$skip=4.</p>\n<p><strong>$top</strong> -<br>\nReturn entries from the top of the feed, e.g. Categories?$top=4</p>\n<p>See MSDN for more options.</p>\n<p>-- Updated Post --</p>\n<p>Thanks to James Hancock for pointing this one out for me. This post is a little misleading in that the $select is currently not supported. Please see <a href=\"http://forums.asp.net/t/1771116.aspx/1?OData%20Support\">http://forums.asp.net/t/1771116.aspx/1?OData%20Support</a> for more information on this. The other query string parameters listed above are supported.</p>","frontmatter":{"title":"ASP WebApi query single entity","date":"April 09, 2012"}}},"pageContext":{"slug":"/blog/2012-04-09-asp-webapi-query-single-entity/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}