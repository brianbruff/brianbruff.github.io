{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2010-06-03-waitcursor-and-mvvm/","result":{"data":{"markdownRemark":{"html":"<p>Ever wondered how to display the correct cursor in an application that is databinded to async methods?</p>\n<p>Pretty easy solution, just databind the cursor on the window itself.</p>\n<h2>Here's how:</h2>\n<ul>\n<li>Add an IsBusy property on the DataContext (and implement INotifyPropertyChanged on it)</li>\n<li>Add the following to your window xaml</li>\n</ul>\n<p>[code:c#]</p>\n<p>xmlns:valueConverters=\"clr-namespace:XXX.ValueConverters\"<br>\nCursor=\"{Binding IsBusy, Converter={valueConverters:CursorExtensionConverter}}\"</p>\n<p>[/code]</p>\n<ul>\n<li>Create the following ValueConverter</li>\n</ul>\n<p>[code:c#]</p>\n<p>public class CursorExtensionConverter : MarkupExtension, IValueConverter<br>\n{<br>\npublic object Convert(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)<br>\n{<br>\nif (value != null &#x26;&#x26; ((bool)value))<br>\nreturn Cursors.Wait;<br>\nelse<br>\nreturn Cursors.Arrow;<br>\n}</p>\n<p>public object ConvertBack(object value, Type targetType, object parameter, System.Globalization.CultureInfo culture)<br>\n{<br>\nthrow new NotImplementedException();<br>\n}</p>\n<p>public override object ProvideValue(IServiceProvider serviceProvider)<br>\n{<br>\nreturn instance;<br>\n}</p>\n<p>private static CursorExtensionConverter instance = new CursorExtensionConverter();<br>\n}</p>\n<p>[/code]</p>\n<h3>Note: Use of MarkupExtension</h3>","frontmatter":{"title":"WaitCursor and MVVM","date":"June 03, 2010"}}},"pageContext":{"slug":"/blog/2010-06-03-waitcursor-and-mvvm/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}