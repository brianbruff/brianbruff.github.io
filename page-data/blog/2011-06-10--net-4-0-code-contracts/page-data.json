{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2011-06-10--net-4-0-code-contracts/","result":{"data":{"markdownRemark":{"html":"<p>Yesterday I read an interesting <a href=\"http://msdn.microsoft.com/en-us/magazine/gg983479.aspx\">article</a> on a flight home from Amsterdam and though I would share it with you.</p>\n<p>One of the generally excepted approaches of writing functions is to validate you input arguments before using them, If-Then-Throw pattern.</p>\n<p>Now .Net 4.0 supports Design by Contract approach to software design .NET 4 code contracts. Lets dive straight in (as always <img src=\"/blog/image.axd?picture=wlEmoticon-smile_3.png\" alt=\"Smile\">)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">   1:  using System.Diagnostics.Contracts;\n\n   2:   \n\n   3:  public class Calculator\n\n   4:  {   \n\n   5:      public Int32 Sum(Int32 x, Int32 y)\n\n   6:      {        \n\n   7:          Contract.Requires(x >= 0 &amp;&amp; y >= 0); \n\n   8:          Contract.Ensures(Contract.Result() >= 0);         \n\n   9:          \n\n  10:          if (x == y)            \n\n  11:          return 2 * x;         \n\n  12:          return x + y;    \n\n  13:      }  \n\n  14:      \n\n  15:      public Int32 Divide(Int32 x, Int32 y)    \n\n  16:      {\n\n  17:          Contract.Requires(x >= 0 &amp;&amp; y >= 0);       \n\n  18:          Contract.Requires(y > 0);\n\n  19:          Contract.Ensures(Contract.Result() >= 0);      \n\n  20:          return x / y;    \n\n  21:      }\n\n  22:  }</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Here we see just how powerful contracts can be, have a look at Dino Espositoâ€™s article above for more information.</p>","frontmatter":{"title":".NET 4.0 Code Contracts","date":"June 10, 2011"}}},"pageContext":{"slug":"/blog/2011-06-10--net-4-0-code-contracts/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}