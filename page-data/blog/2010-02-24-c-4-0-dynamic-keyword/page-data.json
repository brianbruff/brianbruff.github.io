{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2010-02-24-c-4-0-dynamic-keyword/","result":{"data":{"markdownRemark":{"html":"<p>\"object x\" is a shorthand for \"System.Object x\".<br>\nThis declares the variable x to have the type System.Object, this is strongly typed.<br>\nAnd since C# provides autoboxing, you can assign anything you want to this variable.</p>\n<p>\"var x = E\" declares a variable x to be of the type of the expression E.<br>\nThe E is required, not optional. This is a strongly typed declaration, and you can only assign values whose type is typeof(E) to it.</p>\n<p>\"dynamic x\" declares the variable x to have dynamic semantics.<br>\nThis means that the C# compiler will generate code that will allow dynamic invocations on x.<br>\nThe actual meaning of \"x.M\" is deferred until runtime and will depend on the semantics of the IDynamicObject implementation</p>","frontmatter":{"title":"C# 4.0 Dynamic Keyword","date":"February 24, 2010"}}},"pageContext":{"slug":"/blog/2010-02-24-c-4-0-dynamic-keyword/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}