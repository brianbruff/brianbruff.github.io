{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog/2010-02-14-data-validation-in-silverlight-method-1-/","result":{"data":{"markdownRemark":{"html":"<p>Here's one way to do validation in silverlight.</p>\n<p>This is a pretty straight method using exceptions (if you're from the camp that allows exceptions in your Data objects <img src=\"/blog/editors/tiny_mce3/plugins/emotions/img/smiley-cool.gif\" alt=\"Cool\">)</p>\n<p>[code:c#]</p>\n<p>public string Name<br>\n{<br>\nget<br>\n{<br>\nreturn _name;<br>\n}<br>\nset<br>\n{<br>\nif ( value.Length >= 10 )<br>\nthrow new ArgumentException( \"Name is too long\" );<br>\n_name = value;<br>\n}<br>\n}</p>\n<p>NotifyOnValidationError=\"True\"<br>\nValidatesOnExceptions=\"True\" /></p>\n<p>[/code]</p>","frontmatter":{"title":"Data Validation in Silverlight (Method 1)","date":"February 14, 2010"}}},"pageContext":{"slug":"/blog/2010-02-14-data-validation-in-silverlight-method-1-/"}},"staticQueryHashes":["2326376460","63159454"],"slicesMap":{}}