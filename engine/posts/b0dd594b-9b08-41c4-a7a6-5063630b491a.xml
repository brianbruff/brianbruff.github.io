<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>INotifyPropertyChanged diagnostics</title>
  <description>INotifyPropertyChanged implementation</description>
  <content>&lt;p&gt;Those of you that use INotifyPropertyChanged may have noticed it's easy to break the code if you choose to refactor/rename as the property name string does not get refactored.&lt;/p&gt;
&lt;p&gt;Here is a mechanism to catch this problem at the implementation stage.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;[code:c#]&lt;/p&gt;
&lt;p&gt;#region Debugging Aides&lt;/p&gt;
&lt;p&gt;/// &amp;lt;summary&amp;gt;&lt;br /&gt;/// Warns the developer if this object does not have&lt;br /&gt;/// a public property with the specified name. This &lt;br /&gt;/// method does not exist in a Release build.&lt;br /&gt;/// &amp;lt;/summary&amp;gt;&lt;br /&gt;[Conditional("DEBUG")]&lt;br /&gt;[DebuggerStepThrough]&lt;br /&gt;public void VerifyPropertyName(string propertyName)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // Verify that the property name matches a real,&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; // public, instance property on this object.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (TypeDescriptor.GetProperties(this)[propertyName] == null)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; string msg = "Invalid property name: " + propertyName;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if (this.ThrowOnInvalidPropertyName)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; throw new Exception(msg);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Debug.Fail(msg);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;/p&gt;
&lt;p&gt;/// &amp;lt;summary&amp;gt;&lt;br /&gt;/// Returns whether an exception is thrown, or if a Debug.Fail() is used&lt;br /&gt;/// when an invalid property name is passed to the VerifyPropertyName method.&lt;br /&gt;/// The default value is false, but subclasses used by unit tests might &lt;br /&gt;/// override this property's getter to return true.&lt;br /&gt;/// &amp;lt;/summary&amp;gt;&lt;br /&gt;protected virtual bool ThrowOnInvalidPropertyName { get; private set; }&lt;/p&gt;
&lt;p&gt;#endregion // Debugging Aides&lt;/p&gt;
&lt;p&gt;#region INotifyPropertyChanged Members&lt;/p&gt;
&lt;p&gt;/// &amp;lt;summary&amp;gt;&lt;br /&gt;/// Raised when a property on this object has a new value.&lt;br /&gt;/// &amp;lt;/summary&amp;gt;&lt;br /&gt;public event PropertyChangedEventHandler PropertyChanged = (s, e) =&amp;gt; { };&lt;/p&gt;
&lt;p&gt;/// &amp;lt;summary&amp;gt;&lt;br /&gt;/// Raises this object's PropertyChanged event.&lt;br /&gt;/// &amp;lt;/summary&amp;gt;&lt;br /&gt;/// &amp;lt;param name="propertyName"&amp;gt;The property that has a new value.&amp;lt;/param&amp;gt;&lt;br /&gt;protected virtual void OnPropertyChanged(string propertyName)&lt;br /&gt;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; this.VerifyPropertyName(propertyName);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;}&lt;/p&gt;
&lt;p&gt;#endregion // INotifyPropertyChanged Members&lt;/p&gt;
&lt;p&gt;[/code]&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <iscommentsenabled>False</iscommentsenabled>
  <pubDate>2010-05-13 21:41:00</pubDate>
  <lastModified>2010-05-13 21:52:44</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>INotifyPropertyChanged-diagnostics</slug>
  <tags>
    <tag>inotifypropertychanged</tag>
  </tags>
  <comments />
  <categories>
    <category>c3391320-119c-4d13-a800-786c34680dd2</category>
  </categories>
  <notifications />
</post>