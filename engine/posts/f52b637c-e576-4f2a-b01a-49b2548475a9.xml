<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>Linq</title>
  <description />
  <content>&lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;This is just a quick sample to show you can use Linq in 2 different yet identical ways.&lt;/p&gt;  &lt;p&gt;The task is to show the count of people that have the same ages in our sample input data&lt;/p&gt;  &lt;div class="csharpcode"&gt;   &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   1:  &lt;/span&gt;&lt;span class="kwrd"&gt;class&lt;/span&gt; Program&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;   2:  &lt;/span&gt;    {&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   3:  &lt;/span&gt;        &lt;span class="kwrd"&gt;class&lt;/span&gt; Person&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;   4:  &lt;/span&gt;        {&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   5:  &lt;/span&gt;            &lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;string&lt;/span&gt; Name { get; set; }&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;   6:  &lt;/span&gt;            &lt;span class="kwrd"&gt;public&lt;/span&gt; &lt;span class="kwrd"&gt;int&lt;/span&gt; Age { get; set; }&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   7:  &lt;/span&gt;        }&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;   8:  &lt;/span&gt;        &lt;span class="kwrd"&gt;static&lt;/span&gt; &lt;span class="kwrd"&gt;void&lt;/span&gt; Main(&lt;span class="kwrd"&gt;string&lt;/span&gt;[] args)&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   9:  &lt;/span&gt;        {&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  10:  &lt;/span&gt;            &lt;span class="rem"&gt;// some test data&lt;/span&gt;&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  11:  &lt;/span&gt;            var info = &lt;span class="kwrd"&gt;new&lt;/span&gt; List&amp;lt;Person&amp;gt; {&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  12:  &lt;/span&gt;                &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Brian&amp;quot;&lt;/span&gt;, Age = 34 }, &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Dee&amp;quot;&lt;/span&gt;, Age = 29 },                &lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  13:  &lt;/span&gt;                &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Bob&amp;quot;&lt;/span&gt;, Age = 21 }, &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Dave&amp;quot;&lt;/span&gt;, Age = 25 },&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  14:  &lt;/span&gt;                &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Tim&amp;quot;&lt;/span&gt;, Age = 33 }, &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Jacques&amp;quot;&lt;/span&gt;, Age = 43 },&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  15:  &lt;/span&gt;                &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Simon&amp;quot;&lt;/span&gt;, Age = 33 }, &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Jame&amp;quot;&lt;/span&gt;, Age = 34 },&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  16:  &lt;/span&gt;                &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Jason&amp;quot;&lt;/span&gt;, Age = 34 }, &lt;span class="kwrd"&gt;new&lt;/span&gt; Person { Name = &lt;span class="str"&gt;&amp;quot;Niamh&amp;quot;&lt;/span&gt;, Age = 34 }};&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  17:  &lt;/span&gt;            &lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  18:  &lt;/span&gt;            var duplicates = from p &lt;span class="kwrd"&gt;in&lt;/span&gt; info&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  19:  &lt;/span&gt;                             group p by p.Age into g&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  20:  &lt;/span&gt;                             &lt;span class="kwrd"&gt;where&lt;/span&gt; g.Count() &amp;gt; 1&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  21:  &lt;/span&gt;                             select g;&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  22:  &lt;/span&gt;            Print(duplicates);            &lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  23:  &lt;/span&gt;&amp;#160;&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  24:  &lt;/span&gt;            var dups = info.GroupBy(p =&amp;gt; p.Age).Where(p =&amp;gt; p.Count() &amp;gt; 1);&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  25:  &lt;/span&gt;            Print(duplicates);&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  26:  &lt;/span&gt;        }&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  27:  &lt;/span&gt;&amp;#160;&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  28:  &lt;/span&gt;        &lt;span class="kwrd"&gt;static&lt;/span&gt; &lt;span class="kwrd"&gt;void&lt;/span&gt; Print(IEnumerable&amp;lt;IGrouping&amp;lt;&lt;span class="kwrd"&gt;int&lt;/span&gt;, Person&amp;gt;&amp;gt; obj)&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  29:  &lt;/span&gt;        {&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  30:  &lt;/span&gt;            obj.ToList().ForEach(p =&amp;gt; Console.WriteLine(p.Key + &lt;span class="str"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; + p.Count()));&lt;/pre&gt;

  &lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  31:  &lt;/span&gt;        }&lt;/pre&gt;

  &lt;pre&gt;&lt;span class="lnum"&gt;  32:  &lt;/span&gt;    }&lt;/pre&gt;
&lt;/div&gt;
&lt;style type="text/css"&gt;
.csharpcode, .csharpcode pre
{
	font-size: small;
	color: black;
	font-family: consolas, "Courier New", courier, monospace;
	background-color: #ffffff;
	/*white-space: pre;*/
}
.csharpcode pre { margin: 0em; }
.csharpcode .rem { color: #008000; }
.csharpcode .kwrd { color: #0000ff; }
.csharpcode .str { color: #006080; }
.csharpcode .op { color: #0000c0; }
.csharpcode .preproc { color: #cc6633; }
.csharpcode .asp { background-color: #ffff00; }
.csharpcode .html { color: #800000; }
.csharpcode .attr { color: #ff0000; }
.csharpcode .alt 
{
	background-color: #f4f4f4;
	width: 100%;
	margin: 0em;
}
.csharpcode .lnum { color: #606060; }&lt;/style&gt;

&lt;p&gt;&amp;#160;&lt;/p&gt;

&lt;p&gt;&lt;a href="/blog/image.axd?picture=image_36.png"&gt;&lt;img style="background-image: none; border-bottom: 0px; border-left: 0px; margin: 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top: 0px; border-right: 0px; padding-top: 0px" title="image" border="0" alt="image" src="/blog/image.axd?picture=image_thumb_36.png" width="153" height="110" /&gt;&lt;/a&gt;&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2011-03-08 23:38:18</pubDate>
  <lastModified>2011-03-08 23:38:18</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Linq</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>
