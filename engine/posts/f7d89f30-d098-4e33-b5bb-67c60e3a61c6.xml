<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>To Xammer or not to Xammer</title>
  <description />
  <content>&lt;h2&gt;Xamarin vs XCode&lt;/h2&gt;  &lt;p&gt;Anyone that reads this blog regularly or knows me, will know that I’m a C#/Java guy primarily, but I do love all other languages, especially javascript and objective-c&amp;#160; (my objective-c is just about passable, mainly because I’ve only written 3 iOS applications). I was in London this week and I got an early preview of a new service, it looked pretty good so I was thinking of how I could write a few of my own clients for this. I’ve the luxury of being in a position to take a few approaches .&lt;/p&gt;  &lt;h2&gt;Client options&lt;/h2&gt;  &lt;ul&gt;   &lt;li&gt;Html5 Desktop Client &lt;/li&gt;    &lt;li&gt;iOS native client &lt;/li&gt;    &lt;li&gt;Droid native client (I’ve never strictly speaking done one, unless you include my hello world post two years back) &lt;/li&gt;    &lt;li&gt;PhoneGap/KendoUi iPad/Droid apps (I’m doing the phone apps for my Expenses service with these technologies). &lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Decisions tree&lt;/h2&gt;  &lt;p&gt;My first instinct was to go the PhoneGap with KendoUI, I actually did the initial layout and had a look in the Android Emulator and it was pretty nice (as I was in London I didn’t have my MacBookAir with me and I didn’t have the Visual Studio Phone Tools installed either so eclipse/android it was with that painfully slow emulator). The problem I encountered with this approach was that CORS was not enabled by default and I use visual studio to develop design debug (PhoneGap can do CORS once the site is white listed).&lt;/p&gt;  &lt;p&gt;My next option was to write the native clients, when I arrived back home I quickly ensured I could connect to the server with basic authentication, I used objective-C firstly, I didn’t use any 3rd party libraries and the end result appears a little verbose (a better iOS developer will probably cry when they look at these screenshots and tell me use AFNetworking or blocks etc (which I used in my BrianKeating.net companion app).&lt;/p&gt;  &lt;h3&gt;XCode Version&lt;/h3&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_261.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_261.png" width="461" height="126" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Make the initial request and delegate to the view class.&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_262.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_262.png" width="803" height="210" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here i set the username and password for the request when/if challenged.&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=Screen_Shot_2013-05-04_at_22.15.41.png"&gt;&lt;img title="Screen Shot 2013-05-04 at 22.15.41" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="Screen Shot 2013-05-04 at 22.15.41" src="./image.axd?picture=Screen_Shot_2013-05-04_at_22.15.41_thumb.png" width="515" height="147" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here i allocate a place to store the response if it’s was a success and save to data into urlData.&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_263.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_263.png" width="524" height="183" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Here I list all the key value pairs in the JSON returned (something I&amp;#160; don’t actually show in the c# version.&lt;/p&gt;  &lt;p&gt;The attraction of XCode/Objective-C to me is that it’s a different toy to play with.&lt;/p&gt;  &lt;h3&gt;MonoDevelop Version&lt;/h3&gt;  &lt;p&gt;C# is just a fantastic language it’s RAD and Xamarin have done a fantastic job of bringing it to the iOS and Android Platforms. This&amp;#160; screen shot shows the same request to the server as done in XCode, the difference is that this took me about 1 minute where the objective-c version took me about 25 (although i did reuse the storyboard).&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_264.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; border-bottom-width: 0px; display: inline; border-top-width: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_264.png" width="979" height="589" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&amp;#160;&amp;#160; &lt;/p&gt;  &lt;h2&gt;You said Decision?&lt;/h2&gt;  &lt;p&gt;So how will I proceed? I’m going to ditch the objective-C approach for sure:&lt;/p&gt;  &lt;p&gt;Reasons:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;It’s so much faster! I love C++ but can’t get myself to use it for app dev these days simply because C# kicks it to touch for rapid application development, same goes for Objective-C&lt;/li&gt;    &lt;li&gt;Because I don’t expect to continue this POC myself and will have to hand it over to someone, and I don’t know anyone else on the team that knows objective-C. &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I’m actually still leaning towards the PhoneGap/KendoUI option, I just need to get my grubby hands on the server so i can add the CORS headers (again because I don’t want to do the bulk of my debugging with Phone gap but rather IE/Chrome and I quite like my browser stack (jQuery/Knockout/Breeze etc) but the main advantage is that the the same source can then be used for the Android platform. Sure Facebook/LinkedIn etc have all been moving away from html5 because of the tooling, but I feels it’s the best solution for getting to both markets quickly.&lt;/p&gt;  &lt;p&gt;So that is my reasoning, I expect everyone with be faced with much the same decisions and will have to weight the pros and cons themselves.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2013-05-04 15:04:00</pubDate>
  <lastModified>2015-07-09 11:02:37</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>To-Xammer-or-not-to-Xammer</slug>
  <tags>
    <tag>XCode</tag>
    <tag>ObjectiveC</tag>
    <tag>C#</tag>
    <tag>Xamarin</tag>
    <tag>Json</tag>
  </tags>
  <comments />
  <categories />
  <notifications />
</post>