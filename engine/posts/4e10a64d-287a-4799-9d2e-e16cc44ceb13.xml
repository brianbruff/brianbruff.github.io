<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>Recursive Directives Angular.js</title>
  <description />
  <content>&lt;p&gt;Another day, another post with me talking about something I barely know about. Today I’m going to show you my &lt;strike&gt;first&lt;/strike&gt; second stab at a recursive Angular.js directive.&lt;/p&gt;  &lt;p&gt;Let’s first have a look at the end goal (forgive the as of yet unfinished css and bad contrasting colors)&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_295.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_296.png" width="899" height="295"&gt;&lt;/a&gt;    &lt;br clear="all"&gt;Basically we have a list of objects in the dependency tree, each of these in turn can contain a list of children.&lt;/p&gt;  &lt;h2&gt;JSON&lt;/h2&gt;  &lt;p&gt;Lets have a look at the JSON we are trying to represent&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_296.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_297.png" width="462" height="235"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;    &lt;p&gt;   &lt;br clear="all"&gt;It’s pretty simple, each dependency can have children that are in fact themselves the very same object literal types.&lt;/p&gt;  &lt;h2&gt;Directives&lt;/h2&gt;  &lt;p&gt;I created two directives, one for the dependency and one for it’s children.&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_297.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_298.png" width="436" height="290"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;  &lt;p&gt;&amp;nbsp;&lt;/p&gt;  &lt;p&gt;   &lt;br clear="all"&gt;As seen from the screen clipping the directives are pretty simple, however I’d like to draw your attentions to the link function of the curve directive. The reason I had to do this is because on my first attempt I tried to just call the &amp;lt;dependencies&amp;nbsp; in the template itself with an angular ng-if, however angular.js just kept going into an infinite loop, so I added the children &amp;lt;ul&amp;gt; on the fly and $compiled them in (note: $compile is injected).&lt;/p&gt;  &lt;p&gt;The templates for these widgets are pretty trivial (i could have in-lined with “template” but choose to use templateUrl as I much prefer this approach.&lt;/p&gt;  &lt;p&gt;This template just creates a &amp;lt;ul&amp;gt; and then calls the other directive that creates the &amp;lt;li&amp;gt; entries.&lt;a href="./image.axd?picture=image_298.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_299.png" width="510" height="88"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;br clear="all"&gt;  &lt;p&gt;This template shows the &amp;lt;li&amp;gt; entries, remember that I $compile in any children in the directive, it also adds a good or bad class if necessary for styling.   &lt;br clear="all"&gt;&lt;a href="./image.axd?picture=image_299.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="./image.axd?picture=image_thumb_300.png" width="789" height="93"&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;   &lt;br clear="all"&gt;I hope this helps someone should they also encounter the same problem I did with the infinite loop, I’m definitely not saying what is presented above is best practise as I’m relatively new to angular.js after hanging up my &lt;u&gt;knockout.js&lt;/u&gt; belt (it was good while it lasted but angular is much more in line what what I need for SPA apps).&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2014-03-08 14:22:00</pubDate>
  <lastModified>2014-03-10 16:49:25</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Recursive-Directives-Angularjs</slug>
  <tags>
    <tag>angular.js</tag>
    <tag>knockout.js</tag>
    <tag>angular directives</tag>
  </tags>
  <comments />
  <categories>
    <category>ca7a406c-e158-492d-936e-566c78622749</category>
    <category>8d3ccbfc-3431-4646-9ad8-2eac50353c8f</category>
  </categories>
  <notifications />
</post>
