<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>Synchronize you controllers when necessary</title>
  <description />
  <content>&lt;p&gt;Earlier today I happened to lend a hand to a friend of mine that was experiencing a race condition in an ASP.MVC application, like a rag to a bull is multithreading to me.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the scenario; my friend was calling two web services using methods like BeginXXX/EndXXX. Because her website was IO bound she was correctly using an AsyncController.&lt;/p&gt;
&lt;p&gt;She called method to increment the outstanding operations by 2, then proceeded to call&lt;/p&gt;
&lt;blockquote&gt;
&lt;div class="csharpcode"&gt;
&lt;pre class="alt"&gt;service1.BeginGetValuations(v, ar =&amp;gt; {&lt;/pre&gt;
&lt;pre&gt;    AsyncManager.Parameters[&lt;span class="str"&gt;"valuations"&lt;/span&gt;] = service1.EndGetValuations();&lt;/pre&gt;
&lt;pre class="alt"&gt;    AsyncManager.OutstandingOperations.Decrement();&lt;/pre&gt;
&lt;pre&gt;}, null);&lt;/pre&gt;
&lt;pre class="alt"&gt;    &lt;/pre&gt;
&lt;pre&gt;service2.BeginGetValuations(v, ar =&amp;gt; {&lt;/pre&gt;
&lt;pre class="alt"&gt;    AsyncManager.Parameters[&lt;span class="str"&gt;"valuationsActual"&lt;/span&gt;] = service2.EndGetValuations();&lt;/pre&gt;
&lt;pre&gt;    AsyncManager.OutstandingOperations.Decrement();&lt;/pre&gt;
&lt;pre class="alt"&gt;},null);&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- .csharpcode, .csharpcode pre { 	font-size: small; 	color: black; 	font-family: consolas, "Courier New", courier, monospace; 	background-color: #ffffff; 	/*white-space: pre;*/ } .csharpcode pre { margin: 0em; } .csharpcode .rem { color: #008000; } .csharpcode .kwrd { color: #0000ff; } .csharpcode .str { color: #006080; } .csharpcode .op { color: #0000c0; } .csharpcode .preproc { color: #cc6633; } .csharpcode .asp { background-color: #ffff00; } .csharpcode .html { color: #800000; } .csharpcode .attr { color: #ff0000; } .csharpcode .alt  { 	background-color: #f4f4f4; 	width: 100%; 	margin: 0em; } .csharpcode .lnum { color: #606060; } --&gt;&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Looked pretty much ok, except once in a while when load tested the valuationsActual parameter was null.   &lt;br /&gt;So what could be the cause&amp;hellip; Well basically it turned out that there was a race condition accessing the dictionary from two threads.&lt;/p&gt;
&lt;h3&gt;The solution:&lt;/h3&gt;
&lt;p&gt;synchronize access to the Parameters, i first thought of doing this with a plain old lock but I was worried about other access on the parameters from the framework itself so I had a quick read of the documentation and turns out that the AsyncManager has a sync method.&lt;/p&gt;
&lt;div class="csharpcode"&gt;
&lt;pre class="alt"&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre&gt;service1.BeginGetValuations(v, ar =&amp;gt; {&lt;/pre&gt;
&lt;pre class="alt"&gt;    AsyncManager.Sync(() =&amp;gt; {&lt;/pre&gt;
&lt;pre&gt;        AsyncManager.Parameters[&lt;span class="str"&gt;"valuations"&lt;/span&gt;] = service1.EndGetValuations();&lt;/pre&gt;
&lt;pre class="alt"&gt;        AsyncManager.OutstandingOperations.Decrement();&lt;/pre&gt;
&lt;pre&gt;    });&lt;/pre&gt;
&lt;pre class="alt"&gt;}, &lt;span class="kwrd"&gt;null&lt;/span&gt;);&lt;/pre&gt;
&lt;pre&gt;    &lt;/pre&gt;
&lt;/div&gt;
&lt;!-- .csharpcode, .csharpcode pre { 	font-size: small; 	color: black; 	font-family: consolas, "Courier New", courier, monospace; 	background-color: #ffffff; 	/*white-space: pre;*/ } .csharpcode pre { margin: 0em; } .csharpcode .rem { color: #008000; } .csharpcode .kwrd { color: #0000ff; } .csharpcode .str { color: #006080; } .csharpcode .op { color: #0000c0; } .csharpcode .preproc { color: #cc6633; } .csharpcode .asp { background-color: #ffff00; } .csharpcode .html { color: #800000; } .csharpcode .attr { color: #ff0000; } .csharpcode .alt  { 	background-color: #f4f4f4; 	width: 100%; 	margin: 0em; } .csharpcode .lnum { color: #606060; } --&gt;
&lt;p&gt;Do the same for service2.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2011-12-04 15:11:00</pubDate>
  <lastModified>2015-07-09 11:07:49</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Synchronize-you-controllers-when-necessary</slug>
  <tags>
    <tag>Asyncronous MVC</tag>
  </tags>
  <comments />
  <categories />
  <notifications />
</post>