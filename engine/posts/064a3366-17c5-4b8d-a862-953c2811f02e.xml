<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>Angular.js Auth with ASP WebApi2</title>
  <description />
  <content>&lt;p&gt;So in my &lt;a href="https://briankeating.net/post/WebAPI-OWIN-and-HppClient-Authorize" target="_blank"&gt;previous post&lt;/a&gt; I show you how to auth with a bearer token against WebApi2 with the OWIN middleware using a HttpClient. Next up I show you how to do the same with AngularJS.&lt;/p&gt;  &lt;h2&gt;AngularJS&lt;/h2&gt;  &lt;p&gt;True to form I’m not going to write a big long blog post on this topic, there are many others that are better than mine. There are even a nice few github hosted solutions you can grab for yourself.&lt;/p&gt;  &lt;p&gt;I ended up picking the first post I saw, &lt;a href="http://www.codeproject.com/Articles/742532/Using-Web-API-Individual-User-Account-plus-CORS-En"&gt;http://www.codeproject.com/Articles/742532/Using-Web-API-Individual-User-Account-plus-CORS-En&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Now lets ignore the CORS part for starters (have banged my head against the walls many times over that).&amp;#160; In order to get this working with the latest and greatest web api as of this post you’ll need two little tweaks&lt;/p&gt;  &lt;h3&gt;1) Relative URL&lt;/h3&gt;  &lt;p&gt;The author posts the following code&lt;/p&gt;  &lt;table cellspacing="0" cellpadding="2" width="400" border="0"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign="top" width="400"&gt;&lt;a href="https://briankeating.net/image.axd?picture=image_352.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="https://briankeating.net/image.axd?picture=image_thumb_353.png" width="692" height="194" /&gt;&lt;/a&gt;&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt; You’ll need to change the baseUrl to an empty string, if you leave it this way (even when correcting the port) you’ll end up in a CORS situation and you’ll see the browser send an OPTIONS request which you don’t want. (in fairness the author was showing CORS working so there is nothing wrong with his/her post).&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;h3&gt;2) Token Payload&lt;/h3&gt;  &lt;table cellspacing="0" cellpadding="2" width="400" border="0"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign="top" width="400"&gt;&lt;a href="https://briankeating.net/image.axd?picture=image_353.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="https://briankeating.net/image.axd?picture=image_thumb_354.png" width="551" height="214" /&gt;&lt;/a&gt; &lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;The important part is that i create a new object ‘data’ and this contains the querystring for the POST body, in the $http call, I then pass data rather than userData like the codeproject article shows. &lt;/p&gt;  &lt;p&gt;That’s it, you should now be up and running.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2014-10-17 22:28:39</pubDate>
  <lastModified>2014-10-17 22:28:39</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Angularjs-Auth-with-ASP-WebApi2</slug>
  <tags>
    <tag>Authentication</tag>
    <tag>AngularJS</tag>
    <tag>OWIN</tag>
    <tag>WEBAPI</tag>
  </tags>
  <comments />
  <categories>
    <category>ca7a406c-e158-492d-936e-566c78622749</category>
    <category>600b93f7-8e42-4f27-9502-1f5894586ce6</category>
    <category>bac1d4a9-65e0-4f8f-9d12-1ace4e2d5171</category>
    <category>36e0214d-901e-415d-b6e8-c13b80d5e620</category>
  </categories>
  <notifications />
</post>