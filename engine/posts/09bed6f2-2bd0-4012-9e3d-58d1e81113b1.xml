<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>smart_ptr in java 1.7</title>
  <description />
  <content>&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Darn it but I&amp;rsquo;ve being doing a lot of Java recently and u know what, I&amp;rsquo;m no expert but it I think I could even a raise the rating on my C.V. at this stage. My first experience of Java was reading a book back in 2001 belonging to a student friend of mine, the book was lying about so picked it up and read it over the course of a week (yes I had an early addiction to technologies even though I was living in c++ land at the time). I ended up helping with one Final year project a java applet game suite if I remember correctly and in a JBuilder IDE.&lt;/p&gt;
&lt;p&gt;Over the years I quickly forgot about my little affair with java and got deeper into c++ which I have to say I loved, around the same time I was having another affair (yes i was a slut) with Microsoft .net beta2. I can&amp;rsquo;t put my finger exactly on why c# won out for me, but I spent the next few years working on c++ and c#, Java was just something I always left to one side. I always though hey java will be easy, I&amp;rsquo;ve programmed in c#, same concepts, and moreover I knew c++, so well then c# or java are a walk in the part; while this I guess is partially true, but you&amp;rsquo;re not prepared you for the curve/slope/cliff you&amp;rsquo;ve got to climb to learn the IDE and the libraries needed these days.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;m currently working for a data management company our products are written in java and .net. For the first two years I managed to live in the .net world but lately and mostly due to the success of some of our newer components I&amp;rsquo;ve been doing quite a lot of java, (a lot more than I ever expected). I&amp;rsquo;ve also started reading some good books on the subject and you know what I&amp;rsquo;m as likely to start a test application in Eclipse as I am in VS2010 these days (at least as far as the product components are concerned).&lt;/p&gt;
&lt;p&gt;So what&amp;rsquo;s changed? Well for one the java language is evolving once again which is exciting; so to continue on my smart_ptr series of posts, we can now achieve resource cleanup with java 1.7 with the AutoClosable interface.&lt;/p&gt;
&lt;p&gt;For .net people this will be very familiar to IDisposable and the using(var x = new IDisposableDerivedType())&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;div class="csharpcode"&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   1:  &lt;/span&gt;File file = &lt;span class="kwrd"&gt;new&lt;/span&gt; File(&lt;span class="str"&gt;"input.txt"&lt;/span&gt;);&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;   2:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   3:  &lt;/span&gt;InputStream &lt;span class="kwrd"&gt;is&lt;/span&gt; = &lt;span class="kwrd"&gt;null&lt;/span&gt;;&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;   4:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   5:  &lt;/span&gt;&lt;span class="kwrd"&gt;try&lt;/span&gt; {&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;   6:      &lt;/span&gt;&lt;span class="kwrd"&gt;is&lt;/span&gt; = &lt;span class="kwrd"&gt;new&lt;/span&gt; FileInputStream(file);&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   7:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;   8:      &lt;/span&gt;&lt;span class="rem"&gt;// do something with this input stream&lt;/span&gt;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;   9:      &lt;/span&gt;&lt;span class="rem"&gt;// ...&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  10:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  11:  &lt;/span&gt;}&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  12:  &lt;/span&gt;&lt;span class="kwrd"&gt;catch&lt;/span&gt; (FileNotFoundException ex) {&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  13:      &lt;/span&gt;System.err.println(&lt;span class="str"&gt;"Missing file "&lt;/span&gt; + file.getAbsolutePath());&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  14:  &lt;/span&gt;}&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  15:  &lt;/span&gt;&lt;span class="kwrd"&gt;finally&lt;/span&gt; {&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  16:      &lt;/span&gt;&lt;span class="kwrd"&gt;if&lt;/span&gt; (&lt;span class="kwrd"&gt;is&lt;/span&gt; != &lt;span class="kwrd"&gt;null&lt;/span&gt;) {&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  17:          &lt;/span&gt;&lt;span class="kwrd"&gt;is&lt;/span&gt;.close();&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  18:      &lt;/span&gt;}&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  19:  &lt;/span&gt;}&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  20:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  21:  &lt;/span&gt;Java 7: Try with resources&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  22:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  23:  &lt;/span&gt;File file = &lt;span class="kwrd"&gt;new&lt;/span&gt; File(&lt;span class="str"&gt;"input.txt"&lt;/span&gt;);&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  24:  &lt;/span&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  25:  &lt;/span&gt;&lt;span class="kwrd"&gt;try&lt;/span&gt; (InputStream &lt;span class="kwrd"&gt;is&lt;/span&gt; = &lt;span class="kwrd"&gt;new&lt;/span&gt; FileInputStream(file)) {&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  26:      &lt;/span&gt;&lt;span class="rem"&gt;// do something with this input stream&lt;/span&gt;&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  27:      &lt;/span&gt;&lt;span class="rem"&gt;// ...&lt;/span&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  28:  &lt;/span&gt;}&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  29:  &lt;/span&gt;&lt;span class="kwrd"&gt;catch&lt;/span&gt; (FileNotFoundException ex) {&lt;/pre&gt;
&lt;pre&gt;&lt;span class="lnum"&gt;  30:      &lt;/span&gt;System.err.println(&lt;span class="str"&gt;"Missing file "&lt;/span&gt; + file.getAbsolutePath());&lt;/pre&gt;
&lt;pre class="alt"&gt;&lt;span class="lnum"&gt;  31:  &lt;/span&gt;}&lt;/pre&gt;
&lt;/div&gt;
&lt;!-- .csharpcode, .csharpcode pre { 	font-size: small; 	color: black; 	font-family: consolas, "Courier New", courier, monospace; 	background-color: #ffffff; 	/*white-space: pre;*/ } .csharpcode pre { margin: 0em; } .csharpcode .rem { color: #008000; } .csharpcode .kwrd { color: #0000ff; } .csharpcode .str { color: #006080; } .csharpcode .op { color: #0000c0; } .csharpcode .preproc { color: #cc6633; } .csharpcode .asp { background-color: #ffff00; } .csharpcode .html { color: #800000; } .csharpcode .attr { color: #ff0000; } .csharpcode .alt  { 	background-color: #f4f4f4; 	width: 100%; 	margin: 0em; } .csharpcode .lnum { color: #606060; } --&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re guaranteed that the&lt;/p&gt;
&lt;pre class="csharpcode"&gt;&lt;span class="kwrd"&gt;is&lt;/span&gt;.close(); &lt;span style="font-family: Lucida Sans;"&gt;gets called automatically for us. Have to say I'm a bit jealous that the c# team didn't think of the try() syntax over using.&lt;/span&gt;&lt;/pre&gt;
&lt;pre class="csharpcode"&gt;&lt;/pre&gt;
&lt;pre class="csharpcode"&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="csharpcode"&gt;&amp;nbsp;&lt;/pre&gt;
&lt;pre class="csharpcode"&gt;&amp;nbsp;&lt;/pre&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2011-08-12 19:03:00</pubDate>
  <lastModified>2011-08-13 15:13:55</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>smart_ptr-in-java-17</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>