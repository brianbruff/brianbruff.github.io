<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>brianbruff</author>
  <title>So what is this – javascript</title>
  <description />
  <content>&lt;p&gt;To the uninitiated &lt;strong&gt;this&lt;/strong&gt; can be really confusing in JavaScript. Consider the following:&lt;/p&gt;  &lt;table cellspacing="0" cellpadding="2" width="400" border="0"&gt;&lt;tbody&gt;     &lt;tr&gt;       &lt;td valign="top" width="400"&gt;&lt;a href="./image.axd?picture=image_319.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="./image.axd?picture=image_thumb_319.png" width="311" height="488" /&gt;&lt;/a&gt; &lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;  &lt;p&gt;The code above logs &lt;strong&gt;this &lt;/strong&gt;three times, but what is &lt;em&gt;this?&lt;/em&gt;&lt;/p&gt;  &lt;p&gt;The main source of confusion is a quirk of the language where depending on the invocation pattern this can be set to the global variable (e.g. window in a browser). But there are come other gotchas. &lt;/p&gt;  &lt;p&gt;In the example above &lt;strong&gt;this&lt;/strong&gt; is 3 different objects.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Window&lt;/li&gt;    &lt;li&gt;ATest&lt;/li&gt;    &lt;li&gt;Object&lt;/li&gt; &lt;/ul&gt;  &lt;h2&gt;Function Invocation Patterns&lt;/h2&gt;  &lt;p&gt;In order to explain this we need to know what function invocation patterns are in JavaScript, of which there are 4.&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;method&lt;/li&gt;    &lt;li&gt;function&lt;/li&gt;    &lt;li&gt;constructor&lt;/li&gt;    &lt;li&gt;apply/call&lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;I’ve covered the first 3 above in my example&lt;/p&gt;  &lt;h3&gt;Method&lt;/h3&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_320.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="./image.axd?picture=image_thumb_320.png" width="73" height="25" /&gt;&lt;/a&gt; In the method invocation patters, the method is called bare. Javascript assigns the global variable to &lt;strong&gt;this&lt;/strong&gt; in this instance.&lt;/p&gt;  &lt;h3&gt;Constructor&lt;/h3&gt; &lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="./image.axd?picture=image_thumb_321.png" width="158" height="23" /&gt;In this constructor invocation pattern (i.e. new) this is assigned to the object getting created, ATest&amp;#160; &lt;h3&gt;Function&lt;/h3&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_321.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="./image.axd?picture=image_thumb_322.png" width="78" height="25" /&gt;&lt;/a&gt; In the function invocation pattern this is the enclosing type also, however this is just object in this case i.e. the object literal returned from ATest constructor.&lt;/p&gt;  &lt;h3&gt;Apply&lt;/h3&gt;  &lt;p&gt;I’m not covering this here but the Apply (and the call) invocation patterns basically let you set the value of &lt;strong&gt;this.&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Object Literal can be avoided in this example above as follows.    &lt;br /&gt;What we do is set the methods on &lt;strong&gt;this &lt;/strong&gt;explicitly.&lt;/p&gt;  &lt;p&gt;&lt;a href="./image.axd?picture=image_322.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; border-bottom: 0px; border-left: 0px; display: inline" border="0" alt="image" src="./image.axd?picture=image_thumb_323.png" width="212" height="163" /&gt;&lt;/a&gt; &lt;/p&gt;  &lt;p&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;&lt;/li&gt; &lt;/ul&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2014-05-26 05:30:35</pubDate>
  <lastModified>2014-05-26 05:39:03</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>So-what-is-this-javascript</slug>
  <tags />
  <comments />
  <categories />
  <notifications />
</post>
