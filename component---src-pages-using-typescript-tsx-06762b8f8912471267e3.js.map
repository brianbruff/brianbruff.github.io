{"version":3,"file":"component---src-pages-using-typescript-tsx-06762b8f8912471267e3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/header.module.css","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/layout.module.css","webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var header = \"header-module--header--666b3\";\nexport var headerContent = \"header-module--headerContent--d7417\";\nexport var logo = \"header-module--logo--9932e\";\nexport var nav = \"header-module--nav--7bc38\";\nexport var navLink = \"header-module--navLink--8864e\";","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport * as styles from \"./header.module.css\"\n\nconst Header = ({ siteTitle }) => (\n  <header className={styles.header}>\n    <div className={styles.headerContent}>\n      <Link to=\"/\" className={styles.logo}>\n        {siteTitle}\n      </Link>\n      <nav className={styles.nav}>\n        <Link to=\"/blog\" className={styles.navLink}>\n          Blog\n        </Link>\n        <a\n          href=\"https://github.com/brianbruff\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className={styles.navLink}\n        >\n          GitHub\n        </a>\n      </nav>\n    </div>\n  </header>\n)\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport * as styles from \"./layout.module.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={styles.container}>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div className={styles.content}>\n        <main>{children}</main>\n        <footer className={styles.footer}>\n          © {new Date().getFullYear()} Brian Keating. All rights reserved.\n          <div className={styles.footerLinks}>\n            <a href=\"https://briankeating.net\">briankeating.net</a>\n            <span className={styles.divider}>·</span>\n            <a href=\"https://github.com/brianbruff\">GitHub</a>\n          </div>\n        </footer>\n      </div>\n    </div>\n  )\n}\n\nexport default Layout\n","// extracted by mini-css-extract-plugin\nexport var container = \"layout-module--container--78b04\";\nexport var content = \"layout-module--content--2bfc1\";\nexport var divider = \"layout-module--divider--2b8a7\";\nexport var footer = \"layout-module--footer--ad7d0\";\nexport var footerLinks = \"layout-module--footerLinks--b238e\";","// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["navLink","_ref","siteTitle","React","className","Link","to","styles","href","target","rel","_data$site$siteMetada","children","data","useStaticQuery","Header","site","siteMetadata","title","Date","getFullYear","Head","Seo","location","Layout","pathname","buildTime","_site$siteMetadata","_site$siteMetadata2","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}